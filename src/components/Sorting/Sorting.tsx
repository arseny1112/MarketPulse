import { useState } from 'react'
import globalStyles from '../../index.module.css'
import styles from './Sorting.module.css'
import { useEffect } from 'react';



export function Sorting() {
    const [sortType, setSortType] = useState<'price' | 'popularity' | 'alphabetically'>('price');
    const [isAscending, setIsAscending] = useState(true);

    useEffect(() => {
        setIsAscending(true);
    }, [sortType]);

    const cycleSortType = () => {
        setSortType((prev) =>
            prev === 'price' ? 'alphabetically' : prev === 'alphabetically' ? 'popularity' : 'price'
        );
    };

    return (
        <button className={`${styles.sort} ${globalStyles.flex}`} onClick={cycleSortType}>
            <p>{sortType === "price" ? "По цене" : sortType === "alphabetically" ? "По алфавиту" : "По популярности"}</p>
            <svg
                onClick={(e) => {
                    e.stopPropagation();
                    setIsAscending(prev => !prev);
                }}
                className={isAscending ? styles.up : styles.down}
                width="26"
                height="26"
                viewBox="0 0 26 26"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
            >
                <path d="M23.5158 15.4841C23.7189 15.6873 23.833 15.9628 23.833 16.25C23.833 16.5373 23.7189 16.8128 23.5158 17.016L19.1825 21.3493C18.9793 21.5524 18.7038 21.6665 18.4166 21.6665C18.1293 21.6665 17.8538 21.5524 17.6507 21.3493L13.3173 17.016C13.12 16.8116 13.0108 16.538 13.0133 16.2539C13.0157 15.9699 13.1297 15.6982 13.3305 15.4973C13.5314 15.2965 13.8031 15.1825 14.0871 15.1801C14.3712 15.1776 14.6448 15.2868 14.8492 15.4841L17.3332 17.9682L17.3332 5.41671C17.3332 5.12939 17.4474 4.85384 17.6505 4.65067C17.8537 4.44751 18.1293 4.33337 18.4166 4.33337C18.7039 4.33337 18.9794 4.44751 19.1826 4.65068C19.3858 4.85384 19.4999 5.12939 19.4999 5.41671L19.4999 17.9682L21.984 15.4841C22.1871 15.281 22.4626 15.1669 22.7499 15.1669C23.0372 15.1669 23.3127 15.281 23.5158 15.4841ZM12.6825 10.516C12.4793 10.7191 12.2038 10.8331 11.9166 10.8331C11.6293 10.8331 11.3538 10.7191 11.1507 10.516L8.66657 8.03187L8.66657 20.5834C8.66657 20.8707 8.55244 21.1462 8.34927 21.3494C8.14611 21.5526 7.87056 21.6667 7.58324 21.6667C7.29592 21.6667 7.02037 21.5526 6.81721 21.3494C6.61404 21.1462 6.49991 20.8707 6.49991 20.5834L6.49991 8.03187L4.01583 10.516C3.81151 10.7133 3.53785 10.8225 3.25381 10.82C2.96976 10.8176 2.69805 10.7036 2.49719 10.5028C2.29633 10.3019 2.18239 10.0302 2.17993 9.74614C2.17746 9.46209 2.28665 9.18844 2.48399 8.98412L6.81732 4.65079C7.02048 4.4477 7.29598 4.3336 7.58324 4.3336C7.8705 4.3336 8.146 4.4477 8.34916 4.65079L12.6825 8.98412C12.8856 9.18728 12.9997 9.46278 12.9997 9.75004C12.9997 10.0373 12.8856 10.3128 12.6825 10.516Z" fill="#4B4B4B"/>
            </svg>
        </button>
    );
}